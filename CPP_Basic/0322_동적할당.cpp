#include <iostream>
#include <crtdbg.h>
using namespace std;
int main() {
	_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF); // 릭 체크 구문
	//그냥 f5 디버그모드로 들어가서 확인해야 출력창에서 확인할 수 있다.
	/*
	

	동적할당: 메모리를 시작할때 만들어주는 것이 아닌 필요한 순간에 공간을 만들어주는 기능
	//장비를 드랍하는 몬스터는 드랍장비를 모두 넣어놓으면 메모리 낭비가 발생한다.

	/*
	new와 delete 키워드를 이용해서 동적으로 메모리를 할당하고 동적으로 할당된 메모리를 제거할 수 있다.
	단, 동적할당된 메모리는 delete를 통해서 제거를 안할 경우 메모리공간을 그대로 계속 차지하고 있게 된다.
	이 상태에서 프로그램이 종료되면 메모리가 할당된 채로 남아있는 현상이 생기는데 이를 메모리 릭이라고 한다.

	new 변수타입; 을 해주면 변수타입의 메모리 크기만큼을 동적으로 할당해주고 생성도니 메모리의 주소를 반환한다.
	- 반환된 주소는 따로 저장을 해주어야 한다.
	★메모리를 제거할 때 해당 주소를 알아야 제거가 가능하기 때문이다.
	*/
	new int; //(동적할당)
	




	return 0;
}